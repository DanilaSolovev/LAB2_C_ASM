


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000         array_res_asm
                               PROC                         ; –ù–∞—á–∞–ª–æ —Ñ—É
                                                            –Ω–∫—Ü–∏–∏ array_tr
                                                            eatment_asm
    4 00000000                 EXPORT           array_res_asm
    5 00000000         ; –§—É–Ω–∫—Ü–∏—è (–ø—Ä–æ—Ü–µ–¥—É—Ä–∞) —Ä–µ–∞–ª–∏–∑—É–µ—Ç
                        –æ–±—Ä–∞–±–æ—Ç–∫—É –º–∞—Å—Å–∏–≤–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç
                       –≤–∏–∏ —Å –∑–∞–¥–∞–Ω–∏–µ–º 
    6 00000000         ; –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –
                       Ω–∞ –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R0,
    7 00000000         ; —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä 
                       R1,
    8 00000000         ; —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —á–µ
                       —Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R2
    9 00000000         ; R0 = *array
   10 00000000         ; R1 = size(array)
   11 00000000 F04F 0300       MOV              R3, #0x00
   12 00000004 460F            MOV              R7, R1
   13 00000006 B500            PUSH             {LR}
   14 00000008 EBAD 0D07       SUB              SP,R7
   15 0000000C 466A            MOV              R2,SP       ;=mas_parity
   16 0000000E F7FF FFFE       BL               parity_prog
   17 00000012 B081            SUB              SP, #0x04
   18 00000014 4669            MOV              R1, SP      ;=MAX_SIZEpar
   19 00000016 7008            STRB             R0, [R1, #0]
   20 00000018         
   21 00000018         
   22 00000018         
   23 00000018 4669            MOV              R1, SP      ;=MAX_SIZEpar
   24 0000001A 7809            LDRB             R1, [R1, #0]
   25 0000001C B001            ADD              SP, #0x04
   26 0000001E 4668            MOV              R0, SP      ;=mas_parity
   27 00000020 B081            SUB              SP, #0x04
   28 00000022 EBAD 0D07       SUB              SP, R7
   29 00000026 466A            MOV              R2, SP      ;=mas_positive
   30 00000028 F7FF FFFE       BL               positive_prog
   31 0000002C B081            SUB              SP, #0x04
   32 0000002E 4669            MOV              R1, SP      ;=MAX_SIZEpos
   33 00000030 7008            STRB             R0, [R1, #0x00]
   34 00000032         
   35 00000032         
   36 00000032 4669            MOV              R1, SP      ;=MAX_SIZEpos
   37 00000034 7809            LDRB             R1, [R1, #0x00]
   38 00000036 B001            ADD              SP, #0x04
   39 00000038 4668            MOV              R0, SP      ;=mas_positive
   40 0000003A F7FF FFFE       BL               avg_prog
   41 0000003E         
   42 0000003E         ;–í–æ–∑–≤—Ä–∞—Ç
   43 0000003E 44BD            ADD              SP, R7
   44 00000040 F89D 1000       LDRB             R1, [SP, #0x00]
   45 00000044 B001            ADD              SP, #0x04
   46 00000046 44BD            ADD              SP, R7
   47 00000048 F85D EB04       POP              {LR}
   48 0000004C 4770            BX               LR
   49 0000004E                 ENDP
   50 0000004E         
   51 0000004E         parity_prog



ARM Macro Assembler    Page 2 


                               PROC
   52 0000004E         ; –§—É–Ω–∫—Ü–∏—è (–ø—Ä–æ—Ü–µ–¥—É—Ä–∞) –æ–ø—Ä–µ–¥–µ–ª—è–µ
                       —Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Å —á–µ—Ç–Ω—ã–º –∏–Ω–
                       ¥–µ–∫—Å–æ–º
   53 0000004E         ; –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –
                       Ω–∞ –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R0,
   54 0000004E         ; —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä 
                       R1,
   55 0000004E         ; —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —á–µ
                       —Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R2
   56 0000004E         ; R0 = *array
   57 0000004E         ; R1 = size(array)
   58 0000004E         ; R2 = *new_array
   59 0000004E         
   60 0000004E         srav
   61 0000004E 428B            CMP              R3, R1
   62 00000050 D00E            BEQ              exit
   63 00000052 F04F 0602       MOV              R6, #0x02
   64 00000056 FBB3 F5F6       UDIV             R5, R3, R6
   65 0000005A FB05 F506       MUL              R5, R5, R6
   66 0000005E 429D            CMP              R5, R3
   67 00000060 D103            BNE              iplus
   68 00000062 5CC5            LDRB             R5, [R0, R3]
   69 00000064 5515            STRB             R5, [R2, R4]
   70 00000066 F104 0401       ADD              R4, #0x01
   71 0000006A         iplus
   72 0000006A F103 0301       ADD              R3, #0x01
   73 0000006E E7EE            B                srav
   74 00000070         exit
   75 00000070 F04F 0300       MOV              R3, #0x00
   76 00000074 4620            MOV              R0, R4
   77 00000076 F04F 0400       MOV              R4, #0x00
   78 0000007A 4770            BX               LR
   79 0000007C                 ENDP                         ; –ö–æ–Ω–µ—Ü –ø—Ä–æ
                                                            –≥—Ä–∞–º–º—ã
   80 0000007C         
   81 0000007C         
   82 0000007C         positive_prog
                               PROC
   83 0000007C         ; –§—É–Ω–∫—Ü–∏—è (–ø—Ä–æ—Ü–µ–¥—É—Ä–∞) –æ–ø—Ä–µ–¥–µ–ª—è–µ
                       —Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–
                       ∏–≤–∞
   84 0000007C         ; –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –
                       Ω–∞ –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R0,
   85 0000007C         ; —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä 
                       R1,
   86 0000007C         ; —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —á–µ
                       —Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R2
   87 0000007C         ; R0 = *array
   88 0000007C         ; R1 = size(array)
   89 0000007C         ; R2 = *new_array
   90 0000007C         
   91 0000007C 4605            MOV              R5, R0
   92 0000007E         srav1
   93 0000007E 428B            CMP              R3, R1
   94 00000080 D008            BEQ              exit1
   95 00000082 5CE8            LDRB             R0, [R5, R3]
   96 00000084 28F0            CMP              R0, #0xF0
   97 00000086 DC02            BGT              iplus1



ARM Macro Assembler    Page 3 


   98 00000088 5510            STRB             R0, [R2, R4]
   99 0000008A F104 0401       ADD              R4, #0x01
  100 0000008E         iplus1
  101 0000008E F103 0301       ADD              R3, #0x01
  102 00000092 E7F4            B                srav1
  103 00000094         exit1
  104 00000094 F04F 0300       MOV              R3, #0x00
  105 00000098 4620            MOV              R0, R4
  106 0000009A F04F 0400       MOV              R4, #0x00
  107 0000009E 4770            BX               LR
  108 000000A0                 ENDP
  109 000000A0         
  110 000000A0         avg_prog
                               PROC
  111 000000A0         ; –§—É–Ω–∫—Ü–∏—è (–ø—Ä–æ—Ü–µ–¥—É—Ä–∞) –Ω–∞—Ö–æ–¥–∏—Ç —Å—
                       Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
  112 000000A0         ; –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –
                       Ω–∞ –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R0
  113 000000A0         ; —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä 
                       R1.
  114 000000A0         ; –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–
                       ≤—Ä–∞—â–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä R0
  115 000000A0         ; R0 = *array
  116 000000A0         ; R1 = size(array)
  117 000000A0         ; return R0= avg_array
  118 000000A0 F04F 0500       MOV              R5, #0x00
  119 000000A4 4602            MOV              R2, R0
  120 000000A6         srav2
  121 000000A6 428B            CMP              R3, R1
  122 000000A8 D004            BEQ              exit2
  123 000000AA 5CD0            LDRB             R0, [R2, R3]
  124 000000AC 4405            ADD              R5, R0
  125 000000AE F103 0301       ADD              R3, #0x01
  126 000000B2 E7F8            B                srav2
  127 000000B4         exit2
  128 000000B4 FBB5 F0F3       UDIV             R0, R5, R3
  129 000000B8 4770            BX               LR
  130 000000BA         
  131 000000BA         
  132 000000BA                 ENDP
  133 000000BA         
  134 000000BA                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main_1.d -o.\objects\main_1.o -IC:\Users\MI\AppData\Loca
l\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 536" --predefine="STM32F10X_MD SETA 1" --l
ist=.\listings\main_1.lst main_1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file main_1.s
   Uses
      None
Comment: .text unused
array_res_asm 00000000

Symbol: array_res_asm
   Definitions
      At line 3 in file main_1.s
   Uses
      At line 4 in file main_1.s
Comment: array_res_asm used once
avg_prog 000000A0

Symbol: avg_prog
   Definitions
      At line 110 in file main_1.s
   Uses
      At line 40 in file main_1.s
Comment: avg_prog used once
exit 00000070

Symbol: exit
   Definitions
      At line 74 in file main_1.s
   Uses
      At line 62 in file main_1.s
Comment: exit used once
exit1 00000094

Symbol: exit1
   Definitions
      At line 103 in file main_1.s
   Uses
      At line 94 in file main_1.s
Comment: exit1 used once
exit2 000000B4

Symbol: exit2
   Definitions
      At line 127 in file main_1.s
   Uses
      At line 122 in file main_1.s
Comment: exit2 used once
iplus 0000006A

Symbol: iplus
   Definitions
      At line 71 in file main_1.s
   Uses
      At line 67 in file main_1.s
Comment: iplus used once
iplus1 0000008E

Symbol: iplus1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 100 in file main_1.s
   Uses
      At line 97 in file main_1.s
Comment: iplus1 used once
parity_prog 0000004E

Symbol: parity_prog
   Definitions
      At line 51 in file main_1.s
   Uses
      At line 16 in file main_1.s
Comment: parity_prog used once
positive_prog 0000007C

Symbol: positive_prog
   Definitions
      At line 82 in file main_1.s
   Uses
      At line 30 in file main_1.s
Comment: positive_prog used once
srav 0000004E

Symbol: srav
   Definitions
      At line 60 in file main_1.s
   Uses
      At line 73 in file main_1.s
Comment: srav used once
srav1 0000007E

Symbol: srav1
   Definitions
      At line 92 in file main_1.s
   Uses
      At line 102 in file main_1.s
Comment: srav1 used once
srav2 000000A6

Symbol: srav2
   Definitions
      At line 120 in file main_1.s
   Uses
      At line 126 in file main_1.s
Comment: srav2 used once
13 symbols
346 symbols in table
